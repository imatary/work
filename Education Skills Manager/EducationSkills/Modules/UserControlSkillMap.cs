using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Windows.Forms;
using EducationSkills.Data;
using System.Collections;
using System.Data.SqlClient;
using DevExpress.XtraGrid.Columns;

namespace EducationSkills.Modules
{
    public partial class UserControlSkillMap : UserControl
    {
        private EducationSkillsDbContext context;
        public UserControlSkillMap()
        {
            InitializeComponent();
        }

        private void UserControlSkillMap_Load(object sender, EventArgs e)
        {
            GetDepartments();
        }

        private void btnFind_Click(object sender, EventArgs e)
        {
            string selectDate=null, selectDept=null;
            if (txtDate.Text != "")
            {
                selectDate = txtDate.DateTime.ToString();
            }
            if(txtDept.Text != "")
            {
                selectDept = txtDept.EditValue.ToString();
            }
            
            GetReportSkillsMap(selectDate, selectDept);
            
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="date"></param>
        /// <param name="dept"></param>
        private void GetReportSkillsMap(string date, string dept)
        {
            // This line of code is generated by Data Source Configuration Wizard
            //entityServerModeSource1.QueryableSource = new EducationSkills.Data.EducationSkillsDbContext().PR_Bomon;
            splashScreenManager1.ShowWaitForm();
            DataTable dt = new DataTable();
            context = new EducationSkillsDbContext();

            SqlParameter parmDept = new SqlParameter() { ParameterName = "@deptCode", Value = dept, SqlDbType = SqlDbType.VarChar };
            if (dept == null)
            {
                parmDept.Value = DBNull.Value;
            }
            SqlParameter parmDate = new SqlParameter() { ParameterName = "@date", Value = date, SqlDbType = SqlDbType.DateTime };
            if (date == null)
            {
                parmDate.Value = DBNull.Value;
            }


            try
            {
                var subjects = context.Database.SqlQuery<Subject>("EXEC [dbo].[sp_GetSubjectCodes]").ToList();

                List<Staff> staffs = context.Database.SqlQuery<Staff>("EXEC [dbo].[sp_GetStaffs] @deptCode, @date", parmDept, parmDate).ToList();

            var d = (from f in staffs
                         group f by new { f.StaffCode, f.FullName, f.DeptCode }
                into myGroup
                         where myGroup.Count() > 0
                         select new
                         {
                             myGroup.Key.StaffCode,
                             myGroup.Key.FullName,
                             myGroup.Key.DeptCode,
                             Subs = myGroup.GroupBy(f => f.MaBoMon)
                             .Select
                             (m =>
                                new
                                {
                                    Date = m.SingleOrDefault(c => c.StaffCode == myGroup.Key.StaffCode).NgayThamGia
                                })
                         }).ToList();

                
                //Creating array for adding dynamic columns
                ArrayList objDataColumn = new ArrayList();

                if (staffs.Count() > 0)
                {
                    //Three column are fix "rank","pupil","Total".
                    objDataColumn.Add("Code");
                    objDataColumn.Add("FullName");
                    objDataColumn.Add("Dept");

                    //Add Subject Name as column in Datatable
                    for (int i = 0; i < subjects.Count; i++)
                    {
                        objDataColumn.Add(subjects[i].MaBoMon);
                    }
                }
                //Add dynamic columns name to datatable dt
                for (int i = 0; i < objDataColumn.Count; i++)
                {
                    dt.Columns.Add(objDataColumn[i].ToString());
                }

                //Add data into datatable with respect to dynamic columns and dynamic data
                for (int i = 0; i < d.Count; i++)
                {
                    List<string> tempList = new List<string>();
                    tempList.Add(d[i].StaffCode.ToString());
                    tempList.Add(d[i].FullName.ToString());
                    tempList.Add(d[i].DeptCode.ToString());

                    var res = d[i].Subs.ToList();
                    for (int j = 0; j < res.Count; j++)
                    {
                        tempList.Add(string.Format("{0:dd/MM/yyyy}", res[j].Date));
                    }

                    dt.Rows.Add(tempList.ToArray<string>());
                }
                gridControl1.DataSource = dt;
                gridView1.Columns[0].Width = 70;
                gridView1.Columns[1].Width = 150;
                gridView1.Columns[2].Width = 70;

                gridView1.Columns[0].Fixed = FixedStyle.Left;
                gridView1.Columns[1].Fixed = FixedStyle.Left;
                gridView1.Columns[2].Fixed = FixedStyle.Left;

            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }

            if (gridControl1.DataSource != null)
            {
                btnExportToExel.Enabled = true;
            }

            splashScreenManager1.CloseWaitForm();

        }
        /// <summary>
        /// 
        /// </summary>
        private void GetDepartments()
        {
            context = new EducationSkillsDbContext();
            var departments = context.Database.SqlQuery<Department>("EXEC [dbo].[sp_Get_All_Departments]").ToList();
            txtDept.Properties.DataSource = departments;

        }

        private void btnRefesh_Click(object sender, EventArgs e)
        {
            txtDate.Text = string.Empty;
            txtDept.Text = string.Empty;
            gridControl1.DataSource = null;
            gridControl1.RefreshDataSource();
            btnFind.Focus();
            btnExportToExel.Enabled = false;
        }

        private void btnExportToExel_Click(object sender, EventArgs e)
        {
            var saveFileDialog1 = new SaveFileDialog
            {
                Filter = @"Exel|*.xls",
                Title = @"Save exel file",
                OverwritePrompt = true,
                FileName=DateTime.Now.ToString("dd-MM-yyyy")
            };
            saveFileDialog1.ShowDialog();
            if (saveFileDialog1.FileName != "")
            {
                gridControl1.ExportToXls(saveFileDialog1.FileName);
            }
        }

        private void txtDept_EditValueChanged(object sender, EventArgs e)
        {
            if (!string.IsNullOrEmpty(txtDept.Text))
            {
                GetReportSkillsMap(null, txtDept.EditValue.ToString());
            }
        }
    }
}
