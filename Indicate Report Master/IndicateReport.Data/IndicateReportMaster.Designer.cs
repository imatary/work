//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("IndicateReport.Models", "FK_PCB_info_ID_process", "ID_process", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IndicateReport.Data.ID_process), "PCB_info", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IndicateReport.Data.PCB_info), true)]

#endregion

namespace IndicateReport.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IndicateReportEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IndicateReportEntities object using the connection string found in the 'IndicateReportEntities' section of the application configuration file.
        /// </summary>
        public IndicateReportEntities() : base("name=IndicateReportEntities", "IndicateReportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IndicateReportEntities object.
        /// </summary>
        public IndicateReportEntities(string connectionString) : base(connectionString, "IndicateReportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IndicateReportEntities object.
        /// </summary>
        public IndicateReportEntities(EntityConnection connection) : base(connection, "IndicateReportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ID_model> ID_model
        {
            get
            {
                if ((_ID_model == null))
                {
                    _ID_model = base.CreateObjectSet<ID_model>("ID_model");
                }
                return _ID_model;
            }
        }
        private ObjectSet<ID_model> _ID_model;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ID_process> ID_process
        {
            get
            {
                if ((_ID_process == null))
                {
                    _ID_process = base.CreateObjectSet<ID_process>("ID_process");
                }
                return _ID_process;
            }
        }
        private ObjectSet<ID_process> _ID_process;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PCB_info> PCB_info
        {
            get
            {
                if ((_PCB_info == null))
                {
                    _PCB_info = base.CreateObjectSet<PCB_info>("PCB_info");
                }
                return _PCB_info;
            }
        }
        private ObjectSet<PCB_info> _PCB_info;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Report_detail> Report_detail
        {
            get
            {
                if ((_Report_detail == null))
                {
                    _Report_detail = base.CreateObjectSet<Report_detail>("Report_detail");
                }
                return _Report_detail;
            }
        }
        private ObjectSet<Report_detail> _Report_detail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Actual_model> Actual_model
        {
            get
            {
                if ((_Actual_model == null))
                {
                    _Actual_model = base.CreateObjectSet<Actual_model>("Actual_model");
                }
                return _Actual_model;
            }
        }
        private ObjectSet<Actual_model> _Actual_model;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IndicateReport> IndicateReports
        {
            get
            {
                if ((_IndicateReports == null))
                {
                    _IndicateReports = base.CreateObjectSet<IndicateReport>("IndicateReports");
                }
                return _IndicateReports;
            }
        }
        private ObjectSet<IndicateReport> _IndicateReports;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ID_model EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToID_model(ID_model iD_model)
        {
            base.AddObject("ID_model", iD_model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ID_process EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToID_process(ID_process iD_process)
        {
            base.AddObject("ID_process", iD_process);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PCB_info EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPCB_info(PCB_info pCB_info)
        {
            base.AddObject("PCB_info", pCB_info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Report_detail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReport_detail(Report_detail report_detail)
        {
            base.AddObject("Report_detail", report_detail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actual_model EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActual_model(Actual_model actual_model)
        {
            base.AddObject("Actual_model", actual_model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IndicateReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndicateReports(IndicateReport indicateReport)
        {
            base.AddObject("IndicateReports", indicateReport);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="Actual_model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actual_model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Actual_model object.
        /// </summary>
        /// <param name="id_model">Initial value of the Id_model property.</param>
        /// <param name="name_actual_model">Initial value of the Name_actual_model property.</param>
        public static Actual_model CreateActual_model(global::System.Int32 id_model, global::System.String name_actual_model)
        {
            Actual_model actual_model = new Actual_model();
            actual_model.Id_model = id_model;
            actual_model.Name_actual_model = name_actual_model;
            return actual_model;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id_model
        {
            get
            {
                return _Id_model;
            }
            set
            {
                if (_Id_model != value)
                {
                    OnId_modelChanging(value);
                    ReportPropertyChanging("Id_model");
                    _Id_model = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id_model");
                    OnId_modelChanged();
                }
            }
        }
        private global::System.Int32 _Id_model;
        partial void OnId_modelChanging(global::System.Int32 value);
        partial void OnId_modelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_actual_model
        {
            get
            {
                return _Name_actual_model;
            }
            set
            {
                OnName_actual_modelChanging(value);
                ReportPropertyChanging("Name_actual_model");
                _Name_actual_model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_actual_model");
                OnName_actual_modelChanged();
            }
        }
        private global::System.String _Name_actual_model;
        partial void OnName_actual_modelChanging(global::System.String value);
        partial void OnName_actual_modelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="ID_model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ID_model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ID_model object.
        /// </summary>
        /// <param name="iD_model1">Initial value of the ID_model1 property.</param>
        /// <param name="name_model">Initial value of the Name_model property.</param>
        public static ID_model CreateID_model(global::System.Int32 iD_model1, global::System.String name_model)
        {
            ID_model iD_model = new ID_model();
            iD_model.ID_model1 = iD_model1;
            iD_model.Name_model = name_model;
            return iD_model;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_model1
        {
            get
            {
                return _ID_model1;
            }
            set
            {
                if (_ID_model1 != value)
                {
                    OnID_model1Changing(value);
                    ReportPropertyChanging("ID_model1");
                    _ID_model1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_model1");
                    OnID_model1Changed();
                }
            }
        }
        private global::System.Int32 _ID_model1;
        partial void OnID_model1Changing(global::System.Int32 value);
        partial void OnID_model1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_model
        {
            get
            {
                return _Name_model;
            }
            set
            {
                OnName_modelChanging(value);
                ReportPropertyChanging("Name_model");
                _Name_model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_model");
                OnName_modelChanged();
            }
        }
        private global::System.String _Name_model;
        partial void OnName_modelChanging(global::System.String value);
        partial void OnName_modelChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="ID_process")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ID_process : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ID_process object.
        /// </summary>
        /// <param name="iD_process1">Initial value of the ID_process1 property.</param>
        /// <param name="name_process">Initial value of the Name_process property.</param>
        public static ID_process CreateID_process(global::System.Int32 iD_process1, global::System.String name_process)
        {
            ID_process iD_process = new ID_process();
            iD_process.ID_process1 = iD_process1;
            iD_process.Name_process = name_process;
            return iD_process;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_process1
        {
            get
            {
                return _ID_process1;
            }
            set
            {
                if (_ID_process1 != value)
                {
                    OnID_process1Changing(value);
                    ReportPropertyChanging("ID_process1");
                    _ID_process1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_process1");
                    OnID_process1Changed();
                }
            }
        }
        private global::System.Int32 _ID_process1;
        partial void OnID_process1Changing(global::System.Int32 value);
        partial void OnID_process1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name_process
        {
            get
            {
                return _Name_process;
            }
            set
            {
                OnName_processChanging(value);
                ReportPropertyChanging("Name_process");
                _Name_process = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name_process");
                OnName_processChanged();
            }
        }
        private global::System.String _Name_process;
        partial void OnName_processChanging(global::System.String value);
        partial void OnName_processChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IndicateReport.Models", "FK_PCB_info_ID_process", "PCB_info")]
        public EntityCollection<PCB_info> PCB_info
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PCB_info>("IndicateReport.Models.FK_PCB_info_ID_process", "PCB_info");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PCB_info>("IndicateReport.Models.FK_PCB_info_ID_process", "PCB_info", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="IndicateReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IndicateReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IndicateReport object.
        /// </summary>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="dateRerport">Initial value of the DateRerport property.</param>
        /// <param name="processID">Initial value of the ProcessID property.</param>
        /// <param name="operatorCode">Initial value of the OperatorCode property.</param>
        /// <param name="modelID">Initial value of the ModelID property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="pass">Initial value of the Pass property.</param>
        public static IndicateReport CreateIndicateReport(global::System.String reportID, global::System.DateTime dateRerport, global::System.String processID, global::System.String operatorCode, global::System.String modelID, global::System.Int32 total, global::System.Int32 pass)
        {
            IndicateReport indicateReport = new IndicateReport();
            indicateReport.ReportID = reportID;
            indicateReport.DateRerport = dateRerport;
            indicateReport.ProcessID = processID;
            indicateReport.OperatorCode = operatorCode;
            indicateReport.ModelID = modelID;
            indicateReport.Total = total;
            indicateReport.Pass = pass;
            return indicateReport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                if (_ReportID != value)
                {
                    OnReportIDChanging(value);
                    ReportPropertyChanging("ReportID");
                    _ReportID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReportID");
                    OnReportIDChanged();
                }
            }
        }
        private global::System.String _ReportID;
        partial void OnReportIDChanging(global::System.String value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateRerport
        {
            get
            {
                return _DateRerport;
            }
            set
            {
                if (_DateRerport != value)
                {
                    OnDateRerportChanging(value);
                    ReportPropertyChanging("DateRerport");
                    _DateRerport = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DateRerport");
                    OnDateRerportChanged();
                }
            }
        }
        private global::System.DateTime _DateRerport;
        partial void OnDateRerportChanging(global::System.DateTime value);
        partial void OnDateRerportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessID
        {
            get
            {
                return _ProcessID;
            }
            set
            {
                OnProcessIDChanging(value);
                ReportPropertyChanging("ProcessID");
                _ProcessID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessID");
                OnProcessIDChanged();
            }
        }
        private global::System.String _ProcessID;
        partial void OnProcessIDChanging(global::System.String value);
        partial void OnProcessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperatorCode
        {
            get
            {
                return _OperatorCode;
            }
            set
            {
                OnOperatorCodeChanging(value);
                ReportPropertyChanging("OperatorCode");
                _OperatorCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperatorCode");
                OnOperatorCodeChanged();
            }
        }
        private global::System.String _OperatorCode;
        partial void OnOperatorCodeChanging(global::System.String value);
        partial void OnOperatorCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                OnModelIDChanging(value);
                ReportPropertyChanging("ModelID");
                _ModelID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModelID");
                OnModelIDChanged();
            }
        }
        private global::System.String _ModelID;
        partial void OnModelIDChanging(global::System.String value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Int32 _Total;
        partial void OnTotalChanging(global::System.Int32 value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pass
        {
            get
            {
                return _Pass;
            }
            set
            {
                OnPassChanging(value);
                ReportPropertyChanging("Pass");
                _Pass = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pass");
                OnPassChanged();
            }
        }
        private global::System.Int32 _Pass;
        partial void OnPassChanging(global::System.Int32 value);
        partial void OnPassChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="PCB_info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PCB_info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PCB_info object.
        /// </summary>
        /// <param name="iD_pcb">Initial value of the ID_pcb property.</param>
        /// <param name="iD_model">Initial value of the ID_model property.</param>
        /// <param name="status_pcb">Initial value of the Status_pcb property.</param>
        /// <param name="timecheck">Initial value of the Timecheck property.</param>
        /// <param name="iD_process">Initial value of the ID_process property.</param>
        public static PCB_info CreatePCB_info(global::System.String iD_pcb, global::System.String iD_model, global::System.String status_pcb, global::System.String timecheck, global::System.Int32 iD_process)
        {
            PCB_info pCB_info = new PCB_info();
            pCB_info.ID_pcb = iD_pcb;
            pCB_info.ID_model = iD_model;
            pCB_info.Status_pcb = status_pcb;
            pCB_info.Timecheck = timecheck;
            pCB_info.ID_process = iD_process;
            return pCB_info;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID_pcb
        {
            get
            {
                return _ID_pcb;
            }
            set
            {
                if (_ID_pcb != value)
                {
                    OnID_pcbChanging(value);
                    ReportPropertyChanging("ID_pcb");
                    _ID_pcb = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID_pcb");
                    OnID_pcbChanged();
                }
            }
        }
        private global::System.String _ID_pcb;
        partial void OnID_pcbChanging(global::System.String value);
        partial void OnID_pcbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID_model
        {
            get
            {
                return _ID_model;
            }
            set
            {
                OnID_modelChanging(value);
                ReportPropertyChanging("ID_model");
                _ID_model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ID_model");
                OnID_modelChanged();
            }
        }
        private global::System.String _ID_model;
        partial void OnID_modelChanging(global::System.String value);
        partial void OnID_modelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status_pcb
        {
            get
            {
                return _Status_pcb;
            }
            set
            {
                OnStatus_pcbChanging(value);
                ReportPropertyChanging("Status_pcb");
                _Status_pcb = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status_pcb");
                OnStatus_pcbChanged();
            }
        }
        private global::System.String _Status_pcb;
        partial void OnStatus_pcbChanging(global::System.String value);
        partial void OnStatus_pcbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Timecheck
        {
            get
            {
                return _Timecheck;
            }
            set
            {
                OnTimecheckChanging(value);
                ReportPropertyChanging("Timecheck");
                _Timecheck = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Timecheck");
                OnTimecheckChanged();
            }
        }
        private global::System.String _Timecheck;
        partial void OnTimecheckChanging(global::System.String value);
        partial void OnTimecheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID_process
        {
            get
            {
                return _ID_process;
            }
            set
            {
                OnID_processChanging(value);
                ReportPropertyChanging("ID_process");
                _ID_process = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_process");
                OnID_processChanged();
            }
        }
        private global::System.Int32 _ID_process;
        partial void OnID_processChanging(global::System.Int32 value);
        partial void OnID_processChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IndicateReport.Models", "FK_PCB_info_ID_process", "ID_process")]
        public ID_process ID_process1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ID_process>("IndicateReport.Models.FK_PCB_info_ID_process", "ID_process").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ID_process>("IndicateReport.Models.FK_PCB_info_ID_process", "ID_process").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ID_process> ID_process1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ID_process>("IndicateReport.Models.FK_PCB_info_ID_process", "ID_process");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ID_process>("IndicateReport.Models.FK_PCB_info_ID_process", "ID_process", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IndicateReport.Models", Name="Report_detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report_detail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Report_detail object.
        /// </summary>
        /// <param name="iD_timecheck_pcb">Initial value of the ID_timecheck_pcb property.</param>
        /// <param name="reportID">Initial value of the ReportID property.</param>
        /// <param name="date_check">Initial value of the Date_check property.</param>
        public static Report_detail CreateReport_detail(global::System.Guid iD_timecheck_pcb, global::System.String reportID, global::System.DateTime date_check)
        {
            Report_detail report_detail = new Report_detail();
            report_detail.ID_timecheck_pcb = iD_timecheck_pcb;
            report_detail.ReportID = reportID;
            report_detail.Date_check = date_check;
            return report_detail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID_timecheck_pcb
        {
            get
            {
                return _ID_timecheck_pcb;
            }
            set
            {
                if (_ID_timecheck_pcb != value)
                {
                    OnID_timecheck_pcbChanging(value);
                    ReportPropertyChanging("ID_timecheck_pcb");
                    _ID_timecheck_pcb = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID_timecheck_pcb");
                    OnID_timecheck_pcbChanged();
                }
            }
        }
        private global::System.Guid _ID_timecheck_pcb;
        partial void OnID_timecheck_pcbChanging(global::System.Guid value);
        partial void OnID_timecheck_pcbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReportID
        {
            get
            {
                return _ReportID;
            }
            set
            {
                OnReportIDChanging(value);
                ReportPropertyChanging("ReportID");
                _ReportID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReportID");
                OnReportIDChanged();
            }
        }
        private global::System.String _ReportID;
        partial void OnReportIDChanging(global::System.String value);
        partial void OnReportIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_check
        {
            get
            {
                return _Date_check;
            }
            set
            {
                OnDate_checkChanging(value);
                ReportPropertyChanging("Date_check");
                _Date_check = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date_check");
                OnDate_checkChanged();
            }
        }
        private global::System.DateTime _Date_check;
        partial void OnDate_checkChanging(global::System.DateTime value);
        partial void OnDate_checkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> Time_check
        {
            get
            {
                return _Time_check;
            }
            set
            {
                OnTime_checkChanging(value);
                ReportPropertyChanging("Time_check");
                _Time_check = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time_check");
                OnTime_checkChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _Time_check;
        partial void OnTime_checkChanging(Nullable<global::System.TimeSpan> value);
        partial void OnTime_checkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> count_actual_pcb
        {
            get
            {
                return _count_actual_pcb;
            }
            set
            {
                Oncount_actual_pcbChanging(value);
                ReportPropertyChanging("count_actual_pcb");
                _count_actual_pcb = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count_actual_pcb");
                Oncount_actual_pcbChanged();
            }
        }
        private Nullable<global::System.Int32> _count_actual_pcb;
        partial void Oncount_actual_pcbChanging(Nullable<global::System.Int32> value);
        partial void Oncount_actual_pcbChanged();

        #endregion

    
    }

    #endregion

    
}
